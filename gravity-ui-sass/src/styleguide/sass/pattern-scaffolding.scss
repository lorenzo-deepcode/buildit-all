/**
  Import all SASS partials that make up Gravity's UI library

  Partials are organised as per Harry Roberts' ITCSS architecture.
  See: https://www.xfive.co/blog/itcss-scalable-maintainable-css-architecture/
*/

// === Settings layer ===
// Used with preprocessors and contain font, colors definitions, etc.
// Must not output any CSS.
@import '../../ui-lib/sass/00-settings/typography';
@import '../../ui-lib/sass/00-settings/modularscale';
@import '../../ui-lib/sass/00-settings/gravy';
@import '../../ui-lib/sass/00-settings/colors';
@import '../../ui-lib/sass/00-settings/spacing';
@import '../../ui-lib/sass/00-settings/strokes';

// === Tools layer ===
// Globally used mixins and functions.
// Must not output any CSS.


// === Generic layer ===
// Reset and/or normalize styles, box-sizing definition, etc.
// This is the first layer which generates actual CSS.


// === Elements layer ===
// Styling for bare HTML elements (like H1, A, etc.).
// These come with default styling from the browser so we can redefine them here.


// === Objects layer ===
// Class-based selectors which define undecorated design patterns, for example
// media object known from OOCSS.

@import 'objects/main';
@import 'objects/symbol';


// === Components layer ===
// Specific UI components. This is where majority of our work takes place and our UI
// components are often composed of Objects and Components.

@import 'components/colors';
@import 'components/datalist';
@import 'components/datatype';
@import 'components/example';
@import 'components/fonts';
@import 'components/label';
@import 'components/sub-heading';
@import 'components/swatch';


// === Utilities layer ===
// Utilities and helper classes with ability to override anything which goes before in the
// triangle, eg. hide helper class.
@import 'utilities/utilities';
