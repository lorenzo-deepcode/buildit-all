Parameters:
  VpcId:
    Type: String

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>

  Scheme:
    Type: String
    Default: internal

  Name:
    Type: String
    Description: >
      Explicit name for this ELB.  Makes it easier to recognize.  Trade-off is update requires replacement of the ELB.

  ElbMarkerSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: >
      Security Group used to mark this ELB for use with the backing Cluster.

  ElbListenerPort:
    Type: Number
    Description: >
      Port the ELB listens on.

  TargetGroupServicePort:
    Type: Number
    Description: >
      Port the load balancer uses when routing traffic to targets.

  TargetGroupHealthCheckPath:
    Type: String
    Default: /
    Description: >
      URI path that the health check executes to determine whether the service is healthy.

  TargetGroupHealthCheckProtocol:
    Type: String
    Default: HTTP
    Description: >
      Protocol used to determine whether the service is healthy.

  Route53HostedZone:
    Type: String
    Default:  Z1P8DS3H3CPS28
    Description: >
      Zone to contain records for DNS mappings.

  Route53DomainName:
    Type: String
    MinLength: 1
    Default:  buildit.tools
    Description: >
      The domain name for the ELB.

  Route53SubDomainName:
    Type: String
    MinLength: 1
    Default:  todo
    Description: >
      The sub domain name for the ELB.


Resources:
  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Sub ${AWS::StackName}-alb
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "TCP"
          FromPort: 80
          ToPort: 80
      VpcId: !Ref VpcId

  Elb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Ref Name
      Scheme: !Ref Scheme
      Subnets: !Ref Subnets
      SecurityGroups:
        - !Ref SecurityGroup
        - !Ref ElbMarkerSecurityGroup

  ElbListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref Elb
      Port: !Ref ElbListenerPort
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: Elb
    Properties:
      VpcId: !Ref VpcId
      Port: !Ref TargetGroupServicePort
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: !Ref TargetGroupHealthCheckPath
      HealthCheckProtocol: !Ref TargetGroupHealthCheckProtocol
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 30

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref ElbListener
      Priority: 1
      Conditions:
        - Field: path-pattern
          Values:
            - /
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward


Outputs:
  TargetGroup:
    Value: !Ref TargetGroup

  DNSName:
    Description: DNS name of the load balancer for the service or site.
    Value: !GetAtt Elb.DNSName

  ServiceUrl:
    Description: URL of the load balancer for the service or site.
    Value: !Sub http://${Elb.DNSName}

  SecurityGroup:
    Value: !Ref SecurityGroup
