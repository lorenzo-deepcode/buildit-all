@startuml

title client-side component management

class ResourceComponent{
}


class Instance {
    path: string;
    node: any
    props: any
    componentClass: any

    rerender(extraProps: any): void
    reload(): void
    rerenderByResource(resource: aem.Resource): void
}

Instance -up-> ResourceComponent : component

note bottom of Instance
There is an Instance wrapping each root react component.
The instance provides methods to rerender the component
with new props.
end note

class ComponentManager {
    getInstance(path: string): Instance
    getNestedInstances(path: string): [Instance]
    reloadComponent(path: string): void
    getParentInstance(path: string): Instance
    reloadRoot(path: string): void
    reloadRootInCq(path: string): void
    setNestedInstancesVisible(path: string, visible: boolean): void
}

ComponentManager -up-> Instance : instances

note bottom of ComponentManager
The ComponentManager provides access to all existing Instances.
Also provides methods to create and update instances.

end note


@enduml