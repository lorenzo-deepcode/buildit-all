/**

  Notes:

  - Supports multiple clouds, but only 1-1-1 mapping between cloud -> template -> image.  The plugin
    supports multiple templates per cloud however, and this could be implemented later.  The plugin
    only supports a 1-1 mapping between template -> image
  - Retention strategy not currently configurable.  It will use the default IDLE strategy
    with a rentention time of 60 minutes.
  - Commented-out values indicate mutually exclusive settings (e.g. new or existing resource group, etc)
  - This example config also requires credentials like so:

  credentials {
    my-admin-credential-id=['username':'admin', 'password':'ENC(AAAADKGPigC2vDGp7Btx8Z+KyEmJUp8DobiaJ9QoaoxS0nWk7feTvo0O)', 'description':'SSH credentials']
    azure-sp=['id': 'azure-sp', 'description': 'azure SP', 'subscriptionId':'ENC(AAAADKJo6t6KaVbHUf97+bW1VLTlzOdsWS+HRuAd/gCxOmWX/V7pffZx+dAO+6E41g==)', 'clientId': 'ENC(AAAADJEPBS43p1UhJ7tlU4uOXcBKlGTMOKfGuSmprEiK/wxt0t7xzbfPLJBKWkU/hA==)', 'clientSecret': 'ENC(AAAADLBZMqQnYTb7wQmW4ghcuB5KF0ZYzte/T0atslRqNHcsMYtFbv52Lv4OQQ==)', 'tenantId': 'ENC(AAAADCdXyebPUb7kYsKy4lvPy6QSQf3OnkzPnPlUZVSZkdU8c0WPBs5kO1AhpawrSg==)', 'azureEnvironment': "Azure", 'type': 'AzureServicePrincipal']
  }

*/


clouds {
    azure {
        builtInImageCloud {
            [
                cloudName = "ubuntu-builtin-image-cloud-name",
                credentialsId = "azure-sp",
                maxVmLimit = "2",
                deploymentTimeout = "1200",
                // existingResourceGroupName = "existing-resource-group",
                newResourceGroupName = "new-resource-group",
                template = [
                    name: "ubuntu-template-name",
                    description: "ubuntu built-in image",
                    agentWorkspace: "/opt/jenkins/workspace",
                    labels: "ubuntu-label",
                    location: "UK West",
                    vmSize: "Standard_DS2_v2",
                    storageAccountType: "Standard_LRS",
                    // existingStorageAccountName: "existing-storage-account",
                    newStorageAccountName: "new-storage-account",
                    diskType: "managed",
                    shutdownOnIdle: false,
                    usageMode: "Use this node as much as possible",
                    vmAdminCredentialsId: "my-admin-credential-id",
                    builtInImage: [
                        imageName: "Ubuntu 16.04 LTS",
                        installGit: true,
                        installMaven: false,
                        installDocker: true
                    ]
                ]
            ]
        }
        advancedImageCloud {
            [
                cloudName = "ubuntu-advanced-image-cloud-name",
                credentialsId = "azure-sp",
                maxVmLimit = "10",
                deploymentTimeout = "600",
                existingResourceGroupName = "existing-resource-group",
                //newResourceGroupName = "new-resource-group",
                template = [
                    name: "advanced-template-name",
                    description: "advanced image",
                    agentWorkspace: "/var/jenkins/workspace",
                    labels: "advanced-label",
                    location: "UK South",
                    vmSize: "Standard_D4s_v3",
                    storageAccountType: "Standard_LRS",
                    existingStorageAccountName: "existing-storage-account",
                    //newStorageAccountName: "new-storage-account",
                    diskType: "managed",
                    shutdownOnIdle: true,
                    usageMode: "Only build jobs with label expressions matching this node",
                    vmAdminCredentialsId: "my-admin-credential-id",
                    advancedImage: [
                        customManagedImageId: "/subscriptions/UUID/resourceGroups/resource-group-name/providers/Microsoft.Compute/images/jenkins-agent-20180712181349",
                        osType: 'Linux',
                        launchMethod: 'SSH',
                        initScript: 'apt-get update && apt-get upgrade -y',
                        runScriptAsRoot: true,
                        doNotUseMachineIfInitFails: true,
                        virtualNetworkName: 'my-vnet',
                        virtualNetworkResourceGroupName: 'my-vnet-rg',
                        subnetName: 'my-subnet',
                        usePrivateIP: true,
                        numberOfExecutors: '4',
                        jvmOptions: '-Xms4G -Xmx4G',
                        preInstallSsh: false
                    ]
                ]
            ]
        }
    }
}